# Project file for Multi Diag Tools
# * Part: mdtport *
# * Directory: mdtport *

# Project
project (multidiagtools)

# Liste des fichiers sources
set (SOURCES_FILES 
          # Port I/O
          mdtAbstractPort.cpp
          mdtPortThreadHelper.cpp
          mdtPortThreadHelperPort.cpp
          mdtPortThreadHelperSocket.cpp
          mdtUsbDeviceDescriptor.cpp
          mdtUsbConfigDescriptor.cpp
          mdtUsbInterfaceDescriptor.cpp
          mdtUsbEndpointDescriptor.cpp
          mdtPortThread.cpp
          mdtPortReadThread.cpp
          mdtPortWriteThread.cpp
          mdtTcpSocket.cpp
          mdtTcpSocketThread.cpp
          mdtPortTransaction.cpp
          # Port info
          mdtPortInfo.cpp
          mdtDeviceInfo.cpp
          mdtPortInfoCbHandler.cpp
          # Device address
          mdtDeviceAddress.cpp
          # Port manager
          mdtPortManager.cpp
          mdtPortManagerStateMachine.cpp
          mdtModbusTcpPortManager.cpp
          # Statud Widget
          mdtPortStatusWidget.cpp
          # Port config
          mdtPortConfig.cpp
          mdtPortConfigWidget.cpp
          # Setup dialogs
          mdtAbstractPortSetupDialog.cpp
          mdtUsbtmcPortSetupDialog.cpp
          mdtModbusTcpPortSetupDialog.cpp
          
          # New USB API
          mdtUsbError.cpp
          mdtUsbDeviceList.cpp
          mdtUsbTransfer.cpp
          mdtUsbControlTransfer.cpp
          mdtUsbPortThreadNew.cpp
          # New USBTMC API
          mdtUsbtmcFrame.cpp
          mdtUsbtmcControlTransfer.cpp
          mdtUsbtmcBulkTransfer.cpp
          mdtUsbtmcInterruptTransfer.cpp
          mdtUsbtmcTransferHandler.cpp
          mdtUsbtmcPortThreadNew.cpp
          mdtUsbtmcPort.cpp
    )


# Platform specific files

# Unix (Posix) specific files
if(UNIX)
  set (SOURCES_FILES ${SOURCES_FILES} 
    # linux/mdtPortPosix.cpp
    linux/mdtPort.cpp
    linux/mdtPortLock.cpp
  )
#   set (HEADER_FILES ${HEADER_FILES} 
#   )
endif(UNIX)

# Librairie du projet
add_library (mdtport${MDTLIB_VERSION_SUFFIX} SHARED ${SOURCES_FILES})
target_link_libraries(mdtport${MDTLIB_VERSION_SUFFIX} Qt5::Core)
target_link_libraries(mdtport${MDTLIB_VERSION_SUFFIX} "usb-1.0")
target_link_libraries(mdtport${MDTLIB_VERSION_SUFFIX} "mdtutilsgui${MDTLIB_VERSION_SUFFIX}")
#target_link_libraries(mdtport${MDTLIB_VERSION_SUFFIX} "mdterrorgui${MDTLIB_VERSION_SUFFIX}")

# Translations - We generate a .pro file, that simplify the usage of lupdate
file(WRITE "${PROJECT_SOURCE_DIR}/../../translations/mdtport.pro" "# Translations project file for lupdate/lrelease\n")
file(APPEND "${PROJECT_SOURCE_DIR}/../../translations/mdtport.pro" "# This file is generated by CMake, all changes will be lost\n")
file(APPEND "${PROJECT_SOURCE_DIR}/../../translations/mdtport.pro" "TRANSLATIONS = ${PROJECT_SOURCE_DIR}/../../translations/mdtport_fr.ts\n")
file(APPEND "${PROJECT_SOURCE_DIR}/../../translations/mdtport.pro" "TRANSLATIONS += ${PROJECT_SOURCE_DIR}/../../translations/mdtport_de.ts\n")
foreach(SRCFILE ${SOURCES_FILES})
  file(APPEND "${PROJECT_SOURCE_DIR}/../../translations/mdtport.pro" "SOURCES += ${PROJECT_SOURCE_DIR}/${SRCFILE}\n")
endforeach(SRCFILE)
foreach(FRMFILE ${FORM_FILES})
  file(APPEND "${PROJECT_SOURCE_DIR}/../../translations/mdtport.pro" "FORMS += ${PROJECT_SOURCE_DIR}/${FRMFILE}\n")
endforeach(FRMFILE)

# Headers to install
file(GLOB INSTALL_HEADERS *.h)
install(FILES ${INSTALL_HEADERS} DESTINATION "${HEADERS_DEST_DIR}/mdtport" COMPONENT dev)
install(FILES ${UIC_HEADERS} DESTINATION "${HEADERS_DEST_DIR}/mdtport" COMPONENT dev)

# Destinations
install(TARGETS "mdtport${MDTLIB_VERSION_SUFFIX}" DESTINATION "${LIB_DEST_DIR}" COMPONENT lib)

# Strip library and put debug symbols into separate file
if(UNIX)
  add_custom_command(TARGET "mdtport${MDTLIB_VERSION_SUFFIX}"
                    POST_BUILD
                    COMMAND objcopy --only-keep-debug "libmdtport${MDTLIB_VERSION_SUFFIX}.so" "libmdtport${MDTLIB_VERSION_SUFFIX}.dbg"
                    COMMAND strip --strip-debug --strip-unneeded "libmdtport${MDTLIB_VERSION_SUFFIX}.so"
                    COMMAND objcopy --add-gnu-debuglink="libmdtport${MDTLIB_VERSION_SUFFIX}.dbg" "libmdtport${MDTLIB_VERSION_SUFFIX}.so"
                    COMMAND chmod -x "libmdtport${MDTLIB_VERSION_SUFFIX}.dbg")
  install(FILES "libmdtport${MDTLIB_VERSION_SUFFIX}.dbg" DESTINATION "${LIB_DEST_DIR}" COMPONENT dbg)
endif(UNIX)
