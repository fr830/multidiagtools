# Project file for Multi Diag Tools
# * Part: mduttools *
# * Directory: mduttools *

# Project
project (multidiagtools)

# Liste des fichiers d'entêtes Qt (entêtes contenant Q_OBJECT)
set (HEADER_FILES 
          mdtPortTerm.h
    )

# Liste des fichiers sources
set (SOURCES_FILES 
          mdtPortTerm.cpp
    )

# Liste des fichiers ui
set (FORM_FILES
          mdtPortTerm.ui
    )

# Liste des fichiers rcc (ressources)
set (RESOURCE_FILES

    )


# Fichiers à traiter par le compilateur moc
QT4_WRAP_CPP (MOC_HEADERS ${HEADER_FILES})

# Fichiers à traiter par le compilateur uic
QT4_WRAP_UI (UIC_HEADERS ${FORM_FILES})

# Fichiers à traiter par le compilateur rcc
QT4_ADD_RESOURCES (RCC_FILES ${RESOURCE_FILES})

# Librairies to link
add_library (mdttools SHARED ${SOURCES_FILES} ${MOC_HEADERS} ${UIC_HEADERS} ${RCC_FILES})
target_link_libraries(mdttools ${QT_LIBRARIES})
target_link_libraries(mdttools "mdtutils")
target_link_libraries(mdttools "mdtutilsgui")
target_link_libraries(mdttools "mdtport")
target_link_libraries(mdttools "mdtserialport")
target_link_libraries(mdttools "mdtdevice")

# Translations - We generate a .pro file, that simplify the usage of lupdate
file(WRITE "${PROJECT_SOURCE_DIR}/../../translations/mdttools.pro" "# Translations project file for lupdate/lrelease\n")
file(APPEND "${PROJECT_SOURCE_DIR}/../../translations/mdttools.pro" "# This file is generated by CMake, all changes will be lost\n")
file(APPEND "${PROJECT_SOURCE_DIR}/../../translations/mdttools.pro" "TRANSLATIONS = ${PROJECT_SOURCE_DIR}/../../translations/mdttools_fr.ts\n")
file(APPEND "${PROJECT_SOURCE_DIR}/../../translations/mdttools.pro" "TRANSLATIONS += ${PROJECT_SOURCE_DIR}/../../translations/mdttools_de.ts\n")
foreach(SRCFILE ${SOURCES_FILES})
  file(APPEND "${PROJECT_SOURCE_DIR}/../../translations/mdttools.pro" "SOURCES += ${PROJECT_SOURCE_DIR}/${SRCFILE}\n")
endforeach(SRCFILE)
foreach(FRMFILE ${FORM_FILES})
  file(APPEND "${PROJECT_SOURCE_DIR}/../../translations/mdttools.pro" "FORMS += ${PROJECT_SOURCE_DIR}/${FRMFILE}\n")
endforeach(FRMFILE)

# Headers to install
file(GLOB INSTALL_HEADERS *.h)
install(FILES ${INSTALL_HEADERS} DESTINATION "${HEADERS_DEST_DIR}/mdttools" COMPONENT dev)

# Destinations
install(TARGETS "mdttools" DESTINATION "${LIB_DEST_DIR}" COMPONENT lib)
# if(MDT_BUILD_STATIC_LIBS)
#   install(TARGETS "mdttools_static" DESTINATION "${LIB_DEST_DIR}" COMPONENT lib)
# endif(MDT_BUILD_STATIC_LIBS)

# Strip library and put debug symbols into separate file
if(UNIX)
  add_custom_command(TARGET "mdttools"
                    POST_BUILD
                    COMMAND objcopy --only-keep-debug "${PROJECT_SOURCE_DIR}/libmdttools.so" "${PROJECT_SOURCE_DIR}/libmdttools.dbg"
                    COMMAND strip --strip-debug --strip-unneeded "${PROJECT_SOURCE_DIR}/libmdttools.so"
                    COMMAND objcopy --add-gnu-debuglink="libmdttools.dbg" "${PROJECT_SOURCE_DIR}/libmdttools.so"
                    COMMAND chmod -x "${PROJECT_SOURCE_DIR}/libmdttools.dbg")
  install(FILES "${PROJECT_SOURCE_DIR}/libmdttools.dbg" DESTINATION "${LIB_DEST_DIR}" COMPONENT dbg)
endif(UNIX)
