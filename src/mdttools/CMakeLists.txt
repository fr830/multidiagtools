# Project file for Multi Diag Tools
# * Part: mdttools *
# * Directory: mdttools *

# Project
project (multidiagtools)

# Liste des fichiers sources
set (SOURCES_FILES 
#           mdtPortTerm.cpp
          mdtModbusIoTool.cpp
    )

# Librairies to link
add_library (mdttools${MDTLIB_VERSION_SUFFIX} SHARED ${SOURCES_FILES})
target_link_libraries(mdttools${MDTLIB_VERSION_SUFFIX} Qt5::Widgets)
target_link_libraries(mdttools${MDTLIB_VERSION_SUFFIX} "mdtutils${MDTLIB_VERSION_SUFFIX}")
target_link_libraries(mdttools${MDTLIB_VERSION_SUFFIX} "mdtutilsgui${MDTLIB_VERSION_SUFFIX}")
target_link_libraries(mdttools${MDTLIB_VERSION_SUFFIX} "mdtport${MDTLIB_VERSION_SUFFIX}")
# target_link_libraries(mdttools${MDTLIB_VERSION_SUFFIX} "mdtserialport${MDTLIB_VERSION_SUFFIX}")
target_link_libraries(mdttools${MDTLIB_VERSION_SUFFIX} "mdtdevice${MDTLIB_VERSION_SUFFIX}")

# Translations - We generate a .pro file, that simplify the usage of lupdate
file(WRITE "${PROJECT_SOURCE_DIR}/../../translations/mdttools.pro" "# Translations project file for lupdate/lrelease\n")
file(APPEND "${PROJECT_SOURCE_DIR}/../../translations/mdttools.pro" "# This file is generated by CMake, all changes will be lost\n")
file(APPEND "${PROJECT_SOURCE_DIR}/../../translations/mdttools.pro" "TRANSLATIONS = ${PROJECT_SOURCE_DIR}/../../translations/mdttools_fr.ts\n")
file(APPEND "${PROJECT_SOURCE_DIR}/../../translations/mdttools.pro" "TRANSLATIONS += ${PROJECT_SOURCE_DIR}/../../translations/mdttools_de.ts\n")
foreach(SRCFILE ${SOURCES_FILES})
  file(APPEND "${PROJECT_SOURCE_DIR}/../../translations/mdttools.pro" "SOURCES += ${PROJECT_SOURCE_DIR}/${SRCFILE}\n")
endforeach(SRCFILE)
foreach(FRMFILE ${FORM_FILES})
  file(APPEND "${PROJECT_SOURCE_DIR}/../../translations/mdttools.pro" "FORMS += ${PROJECT_SOURCE_DIR}/${FRMFILE}\n")
endforeach(FRMFILE)

# Headers to install
file(GLOB INSTALL_HEADERS *.h)
install(FILES ${INSTALL_HEADERS} DESTINATION "${HEADERS_DEST_DIR}/mdttools" COMPONENT dev)

# Destinations
install(TARGETS "mdttools${MDTLIB_VERSION_SUFFIX}" DESTINATION "${LIB_DEST_DIR}" COMPONENT lib)

# Strip library and put debug symbols into separate file
if(UNIX)
  add_custom_command(TARGET "mdttools${MDTLIB_VERSION_SUFFIX}"
                    POST_BUILD
                    COMMAND objcopy --only-keep-debug "libmdttools${MDTLIB_VERSION_SUFFIX}.so" "libmdttools${MDTLIB_VERSION_SUFFIX}.dbg"
                    COMMAND strip --strip-debug --strip-unneeded "libmdttools${MDTLIB_VERSION_SUFFIX}.so"
                    COMMAND objcopy --add-gnu-debuglink="libmdttools${MDTLIB_VERSION_SUFFIX}.dbg" "libmdttools${MDTLIB_VERSION_SUFFIX}.so"
                    COMMAND chmod -x "libmdttools${MDTLIB_VERSION_SUFFIX}.dbg")
  install(FILES "libmdttools${MDTLIB_VERSION_SUFFIX}.dbg" DESTINATION "${LIB_DEST_DIR}" COMPONENT dbg)
endif(UNIX)
