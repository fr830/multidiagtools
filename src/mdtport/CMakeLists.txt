# Project file for Multi Diag Tools
# * Part: mdtport *
# * Directory: mdtport *

# Project
project (multidiagtools)

# Liste des fichiers d'entêtes Qt (entêtes contenant Q_OBJECT)
set (HEADER_FILES 
          # Port I/O
          mdtAbstractPort.h
          # mdtUsbPort.h
          mdtPortThread.h
          mdtPortReadThread.h
          mdtPortWriteThread.h
          mdtTcpSocket.h
          mdtTcpSocketThread.h
          mdtUsbPortThread.h
          # Port info
          mdtPortInfoCbHandler.h
          # Port manager
          mdtPortManager.h
          mdtUsbPortManager.h
          mdtUsbtmcPortManager.h
          mdtModbusTcpPortManager.h
          # Port config
          mdtPortConfigWidget.h
          # Setup dialogs
          mdtUsbtmcPortSetupDialog.h
    )

# Liste des fichiers sources
set (SOURCES_FILES 
          # Port I/O
          mdtAbstractPort.cpp
          mdtUsbPort.cpp
          mdtUsbPortThread.cpp
          mdtUsbDeviceDescriptor.cpp
          mdtUsbConfigDescriptor.cpp
          mdtUsbInterfaceDescriptor.cpp
          mdtUsbEndpointDescriptor.cpp
          mdtPortThread.cpp
          mdtPortReadThread.cpp
          mdtPortWriteThread.cpp
          mdtTcpSocket.cpp
          mdtTcpSocketThread.cpp
          mdtPortTransaction.cpp
          # Port info
          mdtPortInfo.cpp
          mdtDeviceInfo.cpp
          mdtPortInfoCbHandler.cpp
          # Port manager
          mdtPortManager.cpp
          mdtUsbPortManager.cpp
          mdtUsbtmcPortManager.cpp
          mdtModbusTcpPortManager.cpp
          # Port config
          mdtPortConfig.cpp
          mdtPortConfigWidget.cpp
          # Setup dialogs
          mdtUsbtmcPortSetupDialog.cpp
    )

# Liste des fichiers ui
set (FORM_FILES
          mdtPortConfigWidget.ui
          # Setup dialogs
          mdtUsbtmcPortSetupDialog.ui
    )

# Liste des fichiers rcc (ressources)
set (RESOURCE_FILES

    )

# Platform specific files

# Unix (Posix) specific files
if(UNIX)
  set (SOURCES_FILES ${SOURCES_FILES} 
    # linux/mdtPortPosix.cpp
    linux/mdtPort.cpp
    linux/mdtPortLock.cpp
  )
  set (HEADER_FILES ${HEADER_FILES} 
  )
endif(UNIX)

# Fichiers à traiter par le compilateur moc
QT4_WRAP_CPP (MOC_HEADERS ${HEADER_FILES})

# Fichiers à traiter par le compilateur uic
QT4_WRAP_UI (UIC_HEADERS ${FORM_FILES})

# Fichiers à traiter par le compilateur rcc
QT4_ADD_RESOURCES (RCC_FILES ${RESOURCE_FILES})

# Librairie du projet
add_library (mdtport SHARED ${SOURCES_FILES} ${MOC_HEADERS} ${UIC_HEADERS} ${RCC_FILES})
target_link_libraries(mdtport ${QT_LIBRARIES})
target_link_libraries(mdtport "usb-1.0")

# Version statique
if(MDT_BUILD_STATIC_LIBS)
  add_library (mdtport_static STATIC ${SOURCES_FILES} )
  target_link_libraries(mdtport_static ${QT_LIBRARIES})
  set_target_properties("mdtport_static" PROPERTIES OUTPUT_NAME "mdtport")
endif(MDT_BUILD_STATIC_LIBS)

# Translations - We generate a .pro file, that simplify the usage of lupdate
file(WRITE "${PROJECT_SOURCE_DIR}/../../translations/mdtport.pro" "# Translations project file for lupdate/lrelease\n")
file(APPEND "${PROJECT_SOURCE_DIR}/../../translations/mdtport.pro" "# This file is generated by CMake, all changes will be lost\n")
file(APPEND "${PROJECT_SOURCE_DIR}/../../translations/mdtport.pro" "TRANSLATIONS = ${PROJECT_SOURCE_DIR}/../../translations/mdtport_fr.ts\n")
file(APPEND "${PROJECT_SOURCE_DIR}/../../translations/mdtport.pro" "TRANSLATIONS += ${PROJECT_SOURCE_DIR}/../../translations/mdtport_de.ts\n")
foreach(SRCFILE ${SOURCES_FILES})
  file(APPEND "${PROJECT_SOURCE_DIR}/../../translations/mdtport.pro" "SOURCES += ${PROJECT_SOURCE_DIR}/${SRCFILE}\n")
endforeach(SRCFILE)
foreach(FRMFILE ${FORM_FILES})
  file(APPEND "${PROJECT_SOURCE_DIR}/../../translations/mdtport.pro" "FORMS += ${PROJECT_SOURCE_DIR}/${FRMFILE}\n")
endforeach(FRMFILE)

# Headers to install
file(GLOB INSTALL_HEADERS *.h)
install(FILES ${INSTALL_HEADERS} DESTINATION "${HEADERS_DEST_DIR}/mdtport" COMPONENT dev)

# Destinations
install(TARGETS "mdtport" DESTINATION "${LIB_DEST_DIR}" COMPONENT lib)
if(MDT_BUILD_STATIC_LIBS)
  install(TARGETS "mdtport_static" DESTINATION "${LIB_DEST_DIR}" COMPONENT lib)
endif(MDT_BUILD_STATIC_LIBS)